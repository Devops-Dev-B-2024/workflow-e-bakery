name: CI/CD workflow
run-name: testing and deploying by @${{ github.actor }}
on: 
  push:
    branches: [yann]
    tags:
      - 'v*'
permissions:
  contents: write

jobs: 
  run-node: 
    runs-on: ubuntu-latest
    steps: 
      - name: checkout code
        uses: actions/checkout@v4

      - name: use Node.JS
        uses: actions/setup-node@v4
        with: 
          node-version: 20.x
          
      - name: dependances installations
        run: npm install

      - name: run tests
        run: npm test

      - name: lint code
        run: npx eslint .
      
      - name: dependency scanning
        run: npm audit
        
  docker: 
    needs: run-node
    runs-on: ubuntu-latest
    steps: 
      - name: check out the repo
        uses: actions/checkout@v4

      - name: log in to docker Hub
        id: login
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: build docker image
        if: steps.login.outcome == 'success'
        run: docker build -t e-bakery:latest .

      - name: tag docker image
        if: steps.login.outcome == 'success'
        run: docker tag e-bakery ${{ secrets.DOCKER_USERNAME }}/e-bakery:latest 

      - name: push docker image to docker Hub
        if: steps.login.outcome == 'success'
        run: docker push ${{ secrets.DOCKER_USERNAME }}/e-bakery:latest 
    
  release:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: use Node.js
        uses: actions/setup-node@v4
        with: 
          node-version: 20.x

      - name: install dependencies
        run: npm install

      - name: set git identity
        run: |
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"

      - name: run release-it
        run: npx release-it
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 